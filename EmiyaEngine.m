classdef EmiyaEngine < audioPlugin
    %EMIYAENGINE
    %   EmiyaEngine in MATLAB
    %   Port from Python version
    
    properties
        % Work mode true=CopyMode
        Mode = true;
        % General setting
        DynProtect = true;
        PluginEnable = true;
        % AkkoMode setting
        JitterUpper = 0.55;
        JitterLower = 0.02;
        % CopyBand setting
        FindEdge = false;
        SrcFreq = 6000;
        DstFreq = 16000;
        MGain = 1.5;
    end

    properties (Access = private)
        Utils;
    end
    
    properties (Constant)
        % Plugin init
        PluginInterface = audioPluginInterface( ...
            'PluginName','EmiyaEngine',...
            'VendorName','SgDylan',...
            audioPluginParameter(...
                'PluginEnable', ...
                'DisplayName','Bypass', ...
                'Mapping', {'enum', 'On', 'Off'}, ...
                'Style', 'vrocker', ...
                'Layout', [2 1;3 2], 'DisplayNameLocation', 'above'),...
            audioPluginParameter(...
                'Mode',...
                'DisplayName','SR Mode',...
                'Mapping',{'enum','AkkoMode','CopyBand'},...
                'Style', 'vrocker', ...
                'Layout', [2 3;3 4], 'DisplayNameLocation', 'above'),...
            audioPluginParameter(...
                'DynProtect', ...
                'DisplayName','DR Protect', ...
                'Mapping', {'enum', 'Off', 'On'}, ...
                'Style', 'vrocker',...
                'Layout', [2 5;3 6], 'DisplayNameLocation', 'above'),...
            audioPluginParameter(...
                'JitterLower', ...
                'DisplayName','Jitter Lower', ...
                'Mapping', {'lin', 0, 0.1}, ...
                'Style', 'rotaryknob', ...
                'Layout', [2 7;3 8], 'DisplayNameLocation', 'above'),...
            audioPluginParameter(...
                'JitterUpper', ...
                'DisplayName','Jitter Upper', ...
                'Mapping', {'lin', 0.1, 1.0}, ...
                'Style', 'rotaryknob', ...
                'Layout', [2 9;3 10], 'DisplayNameLocation', 'above'),...
            audioPluginParameter(...
                'FindEdge', ...
                'DisplayName','Auto Setting', ...
                'Mapping', {'enum', 'Off', 'On'}, ...
                'Style', 'vtoggle', ...
                'Layout', [2 11;3 12], 'DisplayNameLocation', 'above'),...
            audioPluginParameter(...
                'SrcFreq', ...
                'DisplayName','Source Freq(Hz)', ...
                'Mapping', {'lin', 0, 24000}, ...
                'Style', 'rotaryknob', ...
                'Layout', [2 13;3 14], 'DisplayNameLocation', 'above'),...
            audioPluginParameter(...
                'DstFreq', ...
                'DisplayName','Target Freq(Hz)', ...
                'Mapping', {'lin', 3500, 96000}, ...
                'Style', 'rotaryknob', ...
                'Layout', [2 15;3 16], 'DisplayNameLocation', 'above'),...
            audioPluginParameter(...
                'MGain', ...
                'DisplayName','Master Gain', ...
                'Mapping', {'lin', 0, 30.0}, ...
                'Style', 'rotaryknob', ...
                'Layout', [2 17;3 18], 'DisplayNameLocation', 'above'),...
            audioPluginGridLayout( ...
                'RowHeight',[15,80,80], ...
                'ColumnWidth',[30,30,30,30,30,30,50,50,50,50,30,30,50,50,50,50,50,50], ...
                'RowSpacing',20));
    end
    
    methods
        
        function plugin = EmiyaEngine()
            plugin.Utils = SignalUtils();
        end
        
        function Output = process(plugin, Input)
            % AkkoMode
            if plugin.Mode == false && plugin.PluginEnable == true
                Output = plugin.Utils.AkkoJitter(...
                    Input,...
                    plugin.JitterLower, plugin.JitterUpper, plugin.DynProtect);
            % CopyBand
            elseif plugin.Mode == true && plugin.PluginEnable == true
                Output = plugin.Utils.CopyBand(...
                    Input,getSampleRate(plugin),...
                    plugin.SrcFreq,plugin.DstFreq,plugin.MGain);
            else
                % Auto Setting SrcFreq
                if plugin.FindEdge == true
                    plugin.SrcFreq = plugin.Utils.GetEdgeFreq(...
                        Input,getSampleRate(plugin),plugin.SrcFreq);
                end
                % Bypass
                Output = Input;
            end
        end
    end
end

